# Generated by Django 2.0.2 on 2022-01-22 04:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('public', '0024_auto_20220121_0017'),
    ]

    operations = [
        migrations.CreateModel(
            name='ToolsItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название инструмента')),
                ('description', models.CharField(max_length=500, verbose_name='Аннотация к инструменту')),
                ('other_results_info', models.CharField(max_length=2000, verbose_name='Cведений о других результатах')),
                ('public_access', models.BooleanField(default=False, verbose_name='Публичный доступ')),
                ('publication_status', models.CharField(blank=True, choices=[('VERIFICATION', 'Ожидает проверки'), ('REJECTED', 'Отклонено')], default=None, max_length=100, null=True, verbose_name='Тип библиотеки')),
                ('addressee', models.ManyToManyField(blank=True, to='public.Addressee', verbose_name='Целевая группа/адресат')),
                ('creator', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('method', models.ManyToManyField(blank=True, to='public.Method', verbose_name='Метод')),
                ('practice_type', models.ManyToManyField(blank=True, to='public.PracticeType', verbose_name='Тип практики')),
                ('result_level', models.ManyToManyField(blank=True, to='public.ResultLevel', verbose_name='Уровень результата')),
                ('socila_library_pion', models.ManyToManyField(blank=True, to='public.SocialLibraryPEON', verbose_name='Социальный результат из библиотеки ПИОНа')),
                ('thematic_group', models.ManyToManyField(blank=True, to='public.ThematicGroup', verbose_name='Тематическая группа')),
            ],
            options={
                'verbose_name_plural': 'Логические модели',
                'verbose_name': 'Логическая модель',
            },
        ),
    ]
